name: Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read

jobs:
  validate-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: none
      - name: Install dependencies
        run: composer install
      - name: Validate dependencies are consistent across sub-projects
        run: ./vendor/bin/monorepo-builder validate

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.4', '8.0', '8.1', '8.2', '8.3', '8.4']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none
      - name: Install dependencies
        run: composer install
      - name: Monorepo Builder merge dependencies
        run: ./vendor/bin/monorepo-builder merge
      - name: Run static analysis
        run: ./vendor/bin/phpstan
      - name: Run tests without coverage
        run: ./vendor/bin/phpunit --no-coverage

  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Setup PHP and Xdebug for Code Coverage report
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: xdebug
      - name: Install dependencies
        run: composer install
      - name: Run tests with coverage
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml
      - name: Fix code coverage paths
        run: |
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.xml
      - name: SonarCloud Scan
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: SonarSource/sonarqube-scan-action@v5
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # The check-php-version-matrix returns success if all matrix jobs in build are successful; otherwise, it returns a failure.
  # Use this as a PR status check for GitHub Policy Service instead of individual matrix entry checks.
  check-build-and-coverage:
    runs-on: ubuntu-latest
    needs: [build, code-coverage]
    if: always()
    steps:
      - name: All build matrix options are successful
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: One or more build matrix options failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
